#include <iostream>
using namespace std;

#define MAX_SIZE 100 

int queue[MAX_SIZE]; 
int front = -1;
int rear = -1; 

bool isEmpty() {
    return front == -1 && rear == -1;
}

bool isFull() {
    return rear == MAX_SIZE - 1;
}

void enqueue(int value) {
    if (isFull()) {
        cout << "Queue is full. Cannot enqueue " << value << endl;
    } else {
        if (isEmpty()) {
            front = 0;
        }
        rear++;
        queue[rear] = value;
        cout << "Enqueued " << value << " into queue." << endl;
    }
}

void dequeue() {
    if (isEmpty()) {
        cout << "Queue is empty. Cannot dequeue." << endl;
    } else if (front == rear) {
        cout << "Dequeued " << queue[front] << " from queue." << endl;
        front = -1;
        rear = -1;
    } else {
        cout << "Dequeued " << queue[front] << " from queue." << endl;
        front++;
    }
}

void printQueue() {
    if (isEmpty()) {
        cout << "Queue is empty." << endl;
    } else {
        cout << "Queue: ";
        for (int i = front; i <= rear; i++) {
            cout << queue[i] << " ";
        }
        cout << endl;
    }
}

int main() {
    enqueue(41);
    enqueue(23);
    enqueue(4);
    enqueue(14);
    enqueue(56);
    enqueue(1);

    printQueue();

    enqueue(55);
    dequeue();

    printQueue();

    return 0;
}
